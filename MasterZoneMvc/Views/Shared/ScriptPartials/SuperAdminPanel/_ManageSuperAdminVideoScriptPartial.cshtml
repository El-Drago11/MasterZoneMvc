
<script>
    var UserToken_Global = "";
    var VideoId_Global = 0;


    function initializeDataTable() {
        $("#tblVideo").DataTable();
    }

    $(document).ready(function () {
        StartLoading();
        $.get("/SuperAdmin/GetSuperAdminToken", null, function (dataAdminToken) {
            if (dataAdminToken != "" && dataAdminToken != null) {

                UserToken_Global = dataAdminToken;
                initializeDataTable();
               GetUserVedioDetail();
                StopLoading();
            }
            else {
                $.get("/SuperAdmin/GetSubAdminToken", null, function (dataAdminToken) {
                    if (dataAdminToken != "" && dataAdminToken != null) {

                        UserToken_Global = dataAdminToken;
                        initializeDataTable();
                        GetUserVedioDetail();
                        StopLoading();
                    }
                    else {
                        StopLoading();
                    }
                });
            }
        });
    });

   


    

    $('#AddSubAdminUser').click(function () {
        $('#AddNewSub').show();
        $('#AllSubAdmin').hide();

    });


    function ResetAddViewUserVideo() {
        $('#AddNewSub').hide();
        $('#AllSubAdmin').show();
        $('#AddSubAdminUser').show();
        $(".error-class").html('');
        $("#textuser_vediotitle").val('');
        $("#user_youtubeurlvedio").val('');
        $('#user_vediodescription').val('');
        $("#Manageuser_vediothumbnailimage").val('');
        $('#videoIcon').addClass('d-none');
        $("#videoIcon").attr('src', '');
        document.getElementById("Changetext").innerHTML = "Add Video";
        document.getElementById("ChangeText_header").innerHTML = "Add Video";
        VideoId_Global = 0;
       
    }

       


    function AddbtnUserVideo() {
        var mode = (VideoId_Global <= 0) ? 1 : 2;
        var _userVideoTitle = $("#textuser_vediotitle").val().trim();
        var _userVideoLink = $("#user_youtubeurlvedio").val();
      // var youtubeRegex = /^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.?be)\/.+/;
        var _vediodescription = $("#user_vediodescription").val().trim();
        var _userVideoThumbNailImages_MS = $("#Manageuser_vediothumbnailimage").get(0);
        var _userVideoThumbNailImages = _userVideoThumbNailImages_MS.files;


        var _error_userVideoTitle = $("#error_textuser_vediotitle");
        var _error_userVideoLink = $("#error_user_youtubeurlvedio");
        var _error_vediodescription = $("#error_user_vediodescription");
        var _error_userVideoThumbNailImages = $("#error_Manageuser_vediothumbnailimage");

        let is_valid = true;
        $(".error-class").html('');

        if (validate_IsEmptyStringInputFieldValue(_userVideoTitle)) {
            is_valid = false;
            _error_userVideoTitle.html('@(Resources.VisitorPanel.UserVideoTitleRequired)');
        }
        if (validate_IsEmptyStringInputFieldValue(_userVideoLink)) {
            is_valid = false;
            _error_userVideoLink.html('@(Resources.VisitorPanel.UserVideoLinkRequired)');
        }
            @*else if (!youtubeRegex.test(_userVideoLink)) {
                is_valid = false;
                _error_userVideoLink.html('@(Resources.VisitorPanel.ValidYouTubeLinkRequired)');
            }*@

          if (mode === 1 && _userVideoThumbNailImages.length <= 0) {
                is_valid = false;
                _error_userVideoThumbNailImages.html('@(Resources.VisitorPanel.UserVideoThumbnailImageRequired)');
            }


        if (validate_IsEmptyStringInputFieldValue(_vediodescription)) {
            is_valid = false;
            _error_vediodescription.html('@(Resources.VisitorPanel.VedioDescriptionRequired)');

        }


        if (is_valid) {

            var data = new FormData();
            data.append("Id", VideoId_Global);
            data.append("VideoTitle", _userVideoTitle);
            data.append("VideoLink", _userVideoLink);
            data.append("VideoDescription", _vediodescription);
            data.append("Image", _userVideoThumbNailImages[0]);
            data.append("Mode", mode);


            $.ajax({
                url: '/api/UserContentVideo/AddUpdateVideos',
                headers: {
                    "Authorization": "Bearer " + UserToken_Global
                },
                data: data,
                processData: false,
                mimeType: 'multipart/form-data',
                contentType: false,
                //contentType: 'application/json',
                type: 'POST',
                success: function (dataResponse) {

                    //--Parse into Json of response-json-string
                    dataResponse = JSON.parse(dataResponse);

                    //--If successfully added/updated
                    if (dataResponse.status === 1) {
                        swal("Success!", dataResponse.message, "success");
                        GetUserVedioDetail();

                    }
                    else {
                        swal({
                            title: 'Error!',
                            icon: 'error',
                            text: dataResponse.message
                        });
                        StopLoading();
                        return;
                    }

                    StopLoading();
                    ResetAddViewUserVideo();
                    GetUserVedioDetail();
                },
                error: function (result) {
                    StopLoading();
                    //removeBtnLoading(btnSelector);
                    //enableContinueBtn();

                    if (result["status"] == 401) {
                        $.iaoAlert({
                            msg: 'Unauthorized! Invalid Token!',
                            type: "error",
                            mode: "dark",
                        });
                    }
                    else {
                        $.iaoAlert({
                            msg: 'There is some technical error, please try again!',
                            type: "error",
                            mode: "dark",
                            mode: "dark",
                        });
                    }
                }
            });
        }
    }

    // Image File Preview -------------------------------------------------------------
    document.getElementById('Manageuser_vediothumbnailimage').addEventListener('change', handleProfileImageUpload);

    function handleProfileImageUpload(event) {
        const file = event.target.files[0];
        const fileSize = file.size / 1024; // size in kilobytes
        const maxSize = 10 * 1024 * 1024; // maximum size in kilobytes
        const fileType = file.type;
        const validImageTypes = ['image/jpeg', 'image/png'];

        if (!validImageTypes.includes(fileType)) {
            $.iaoAlert({
                msg: 'Invalid image type. Please select a JPEG, PNG image.',
                type: "error",
                mode: "dark",
            });
            event.target.value = null; // clear the file input element
            $('#videoIcon').addClass('d-none'); // hide the preview image
            return;
        }
        if (fileSize > maxSize) {
            $.iaoAlert({
                msg: 'Image size too large. Please select a smaller image(< 10 MB).',
                type: "error",
                mode: "dark",
            });
            event.target.value = null; // clear the file input element
            $('#videoIcon').addClass('d-none'); // hide the preview image

            return;
        }

        // image size is within the limit, display the preview image
        const reader = new FileReader();
        reader.onload = function (event) {
            document.getElementById('videoIcon').src = event.target.result;
            $('#videoIcon').removeClass('d-none');
        }

        reader.readAsDataURL(file);
    }


    ////// -----------    FIELD VALIDATION HANDLER FUNCTIONS  --------------------------

    const validate_IsEmptyStringInputFieldValue = function (inputFieldValue) {
        if (inputFieldValue == '' || inputFieldValue.replace(/\s/g, "") == "")
            return true;
        return false;
    }

    const validate_IsEmptySelectInputFieldValue = function (inputFieldValue) {
        if (inputFieldValue == undefined || inputFieldValue == null || inputFieldValue == '' || inputFieldValue == 0)
            return true;
        return false;
    }

  ////// -----------    FIELD VALIDATION HANDLER FUNCTIONS  --------------------------




    function EditUserContentVedio(Id) {
        
        $('#AddNewSub').show();
        $('#AllSubAdmin').hide();
        document.getElementById("ChangeText").innerHTML = "Edit Video";
        document.getElementById("Change_text").innerHTML = "Edit Video";
        document.getElementById("ChangeText_header").innerHTML = "Edit Video";

        var _url = "/api/UserContentVideo/GetUserContentVideoDetailById?id=" + Id;

        StartLoading();

        $.ajax({
            type: "GET",
            url: _url,
            headers: {
                "Authorization": "Bearer " + UserToken_Global,
                "Content-Type": "application/json"
            },
            contentType: 'application/json',
            success: function (response) {
                if (response.status < 1) {
                    $.iaoAlert({
                        msg: response.message,
                        type: "error",
                        mode: "dark",
                    });
                    return;

                }
                VideoId_Global = response.data.Id;
                $("#textuser_vediotitle").val(response.data.VideoTitle);
                $("#user_youtubeurlvedio").val(response.data.VideoLink);
                $("#user_vediodescription").val(response.data.VideoDescription);
                $("#videoIcon").attr('src', response.data.VideoThumbNailImageWithPath);
                $("#videoIcon").removeClass('d-none');


                StopLoading();
            },
            error: function (result) {
                StopLoading();

                if (result["status"] == 401) {
                    $.iaoAlert({
                        msg: '@(Resources.ErrorMessage.UnAuthorizedErrorMessage)',
                        type: "error",
                        mode: "dark",
                    });
                }
                else {
                    $.iaoAlert({
                        msg: '@(Resources.ErrorMessage.TechincalErrorMessage)',
                        type: "error",
                        mode: "dark",
                    });
                }
            }
        });
    };


    function GetUserVedioDetail() {
        let _url = "/api/UserContentVideo/GetAllUserContentVideoDetail";
        
     $.ajax({
         type: "GET",
         url: _url,
         headers: {
             "Authorization": "Bearer " + UserToken_Global,
             "Content-Type": "application/json"
         },
         contentType: 'application/json',
         success: function (response) {
             if (response.status < 1) {
                 $.iaoAlert({
                     msg: response.message,
                     type: "error",
                     mode: "dark",
                 });
                 return;
             }

             var _table = $('#tblVideo').DataTable();
             _table.destroy();

             var sno = 0;
             var _videoTitle = '';
             var _videoLink = '';
             var _Image = '';
             var _description = '';
             var _action = '';

             var data = [];
             for (var i = 0; i < response.data.UserContentVedioDetailList.length; i++) {
                 sno++;
                 _videoTitle = response.data.UserContentVedioDetailList[i].VideoTitle;
                 _videoLink = response.data.UserContentVedioDetailList[i].VideoLink;
                 _Image = (response.data.UserContentVedioDetailList[i].VideoThumbNailImageWithPath == "") ? '' : '<img src="' + response.data.UserContentVedioDetailList[i].VideoThumbNailImageWithPath + '" class="videoIcon" />';
                 _description = response.data.UserContentVedioDetailList[i].VideoDescription;
                 _action = '<div class="edbt">';
                 _action += `<a href="javascript:EditUserContentVedio(${response.data.UserContentVedioDetailList[i].Id});"><i class="fas fa-edit"></i></a>`;
              
                 _action += `<a href="javascript:ConfirmDeletedUserContentVedio(${response.data.UserContentVedioDetailList[i].Id});"><button type="button" class="btn btn-danger mb-0">Delete</button></a>`;
                    
                 _action += '</div>';
                 data.push([
                     sno,
                     _videoTitle,
                     _videoLink,
                     _Image,
                     _description,
                     _action

                 ]);

             }

             $('#tblVideo').DataTable({
                 "data": data,
                 "paging": true,
                 "lengthChange": true,
                 "searching": true,
                 "ordering": true,
                 "info": true,
                 "autoWidth": false,
                 "responsive": true,
             });
             StopLoading();
         },
         error: function (result) {
             StopLoading();

             if (result["status"] == 401) {
                 $.iaoAlert({
                     msg: '@(Resources.ErrorMessage.UnAuthorizedErrorMessage)',
                     type: "error",
                     mode: "dark",
                 });
             }
             else {
                 $.iaoAlert({
                     msg: '@(Resources.ErrorMessage.TechincalErrorMessage)',
                     type: "error",
                     mode: "dark",
                 });
             }
         }
     });
 }

      function ConfirmDeletedUserContentVedio(id) {

        swal({
            title: "@(Resources.VisitorPanel.ConfirmDeletedContentVideoTitleMessage)",
            text: "@(Resources.VisitorPanel.ConfirmDeletedContentVideoTextMessage)",
            type: "warning",
            buttons: {
                cancel: true,
                confirm: "@(Resources.ErrorMessage.Yes)",
            }
        })
        .then((willDelete) => {
            if (willDelete) {
                DeletedUserContentVedio(id);
            } else {
                //swal("Your imaginary file is safe!");
            }
        });
    }

    function DeletedUserContentVedio(id) {
        StartLoading();
        $.ajax({
            type: "POST",
            url: "/api/UserContentVideo/DeleteUserContentVideoDetail?id=" + id,
            headers: {
                "Authorization": "Bearer " + UserToken_Global,
                "Content-Type": "application/json"
            },
            contentType: 'application/json',
            success: function (dataResponse) {
                StopLoading();

                //--Check if staff successfully deleted
                if (dataResponse.status == 1) {
                    setTimeout(function () {
                        swal("Success!", dataResponse.message, "success");
                        GetUserVedioDetail();
                    }, 100);
                }
                else {
                    $.iaoAlert({
                        msg: '@(Resources.ErrorMessage.TechincalErrorMessage)',
                        type: "error",
                        mode: "dark",
                    });
                }
            },
            error: function (result) {
                StopLoading();

                if (result["status"] == 401) {
                    $.iaoAlert({
                        msg: '@(Resources.ErrorMessage.UnAuthorizedErrorMessage)',
                        type: "error",
                        mode: "dark",
                    });
                }
                else {
                    $.iaoAlert({
                        msg: '@(Resources.ErrorMessage.TechincalErrorMessage)',
                        type: "error",
                        mode: "dark",
                    });
                }
            }
        });
    }



</script>